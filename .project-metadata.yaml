name: Chat about Cloudera Documentation 
description: |
  Ask me anything about Cloudera Documentation

author: Suri Nuthalapati
specification_version: 0.1
prototype_version: 0.1
date: "2023-11-22"

environment_variables:
  VECTOR_DB:
    default: "MILVUS"
    description: "Enter 'MILVUS' or 'PINECONE' for your preferred Vector DB. Only 'MILVUS' or 'PINECONE' are valid options. Milvus does not require any additional setup. Pinecone will require you to create an account and generate an API key."
    required: true
  PINECONE_API_KEY:
    default: ""
    description: "Only Required for Pinecone Vector DB: Enter your API Key for Pinecone here. (Shown in API Keys page)"
  PINECONE_ENVIRONMENT:
    default: "gcp-starter"
    description: "Only Required for Pinecone Vector DB: Enter your Pinecone environment here. (Shown in API Keys page)"
  PINECONE_INDEX:
    default: "cloudera-docs"
    description: "Only Required for Pinecone Vector DB: The default is 'cloudera-docs' and can be changed to identify variations for organizations with multiple indexes."

runtimes:
  - editor: JupyterLab
    kernel: Python 3.9
    edition: Nvidia GPU

tasks:
  - type: run_session
    name: Validate GPU Availibility
    script: session/resource-validation/check_gpu_resources.py
    short_summary: Check for GPU availibility. 
    long_summary: Check GPUs are enabled on this workspace and are currently schedulable.
    kernel: python3
    cpu: 2
    memory: 8

  - type: run_session
    name: Validate GPU Capability
    script: session/resource-validation/check_gpu_capability.py
    short_summary: Check for GPU capability. 
    long_summary: Check GPU device supports the CUDA capabilities required.
    kernel: python3
    cpu: 2
    memory: 16
    gpu: 1

  - type: run_session
    name: Install Dependencies
    script: session/install-deps/install_general_deps.py
    short_summary: Install Dependencies
    kernel: python3
    cpu: 2
    memory: 16

  - type: run_session
    name: Install LLaMA Dependencies
    script: session/install-deps/install_llama_deps.py
    short_summary: Install LLaMA Dependencies
    kernel: python3
    cpu: 2
    memory: 8
    gpu: 1

  - type: create_job
    name: Populate Milvus Vector DB with documents embeddings
    entity_label: milvus_ingestion
    script: pipeline/load_data/milvus_ingest.py
    arguments: None
    short_summary: Create job to populate Milvus Vector Database with document embeddings. (This is the default Vector DB and will run if "MILVUS" was left or set as the Vector DB.)
    long_summary: Create job to launch Milvus Vector Database locally and insert embeddings for documents. Embeddings are generated by the locally running embeddings model.
    cpu: 2
    memory: 8
    environment:
      TASK_TYPE: CREATE/RUN_JOB

  - type: run_job
    entity_label: milvus_ingestion
    short_summary: Populate Milvus Vector DB with documents embeddings

  - type: create_job
    name: Populate Pinecone Vector DB with documents embeddings
    entity_label: pinecone_ingestion
    script: pipeline/load_data/pinecone_ingest.py
    arguments: None
    short_summary: Create job to populate Pinecone Vector Database with document embeddings. 
    long_summary: Create job to launch Pinecone Vector Database locally and insert embeddings for documents. Embeddings are generated by the locally running embeddings model.
    cpu: 2
    memory: 8
    environment:
      TASK_TYPE: CREATE/RUN_JOB

  - type: run_job
    entity_label: pinecone_ingestion
    short_summary: Populate Pinecone Vector DB with documents embeddings (This will only run if you set "PINECONE" as the Vector DB and provided valid parameters.)

  - type: start_application
    name: Chatbot API for Cloudea Docs
    subdomain: chatbot
    script: app/main.py
    short_summary: Create and start FastAPI
    long_summary: Create and start API for Llama2 application. Ensure available GPUs for best performance. Remember to enable unauthenticated app access for external access to the UI.
    cpu: 2
    memory: 16
    gpu: 1
    environment_variables:
      TASK_TYPE: START_APPLICATION

- type: start_application
  name: Chatbot UI for Cloudera Docs
  subdomain: chatbot
  script: chat-ui/start.py
  short_summary: Build and start UI application with Yarn
  long_summary: This task will run yarn build followed by yarn start.
  cpu: 1
  memory: 8
  environment_variables:
    TASK_TYPE: START_APPLICATION

